<!--
  ~ Copyright 2020 Ben Hills. All rights reserved.
  ~ Use of this source code is governed by a BSD-style license that can be
  ~ found in the LICENSE file.
  -->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:tools="http://schemas.android.com/tools"
        package="uk.me.amugofjava.anytime">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MEDIA_PLAYBACK" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <application
            android:icon="@mipmap/ic_launcher"
            android:label="Anytime Player"
            android:largeHeap="true"
            android:networkSecurityConfig="@xml/network_security_config">
        <activity
                android:name="com.ryanheise.audioservice.AudioServiceActivity"
                android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density"
                android:hardwareAccelerated="true"
                android:launchMode="singleTop"
                android:theme="@style/LaunchTheme"
                android:windowSoftInputMode="adjustResize"
                android:exported="true"
                tools:ignore="Instantiatable">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <!-- Handle podcast subscribe web links -->
            <intent-filter android:autoVerify="true">
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data
                        android:pathPrefix="/subscribe"
                        android:scheme="anytime-subscribe" />
            </intent-filter>
        </activity>

        <service
                android:name="com.ryanheise.audioservice.AudioService"
                android:foregroundServiceType="mediaPlayback"
                android:exported="true"
                tools:ignore="Instantiatable">
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService" />
            </intent-filter>
        </service>

        <receiver
                android:name="com.ryanheise.audioservice.MediaButtonReceiver"
                android:exported="true"
                tools:ignore="Instantiatable">
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>

        <provider
                android:name="androidx.work.impl.WorkManagerInitializer"
                android:authorities="${applicationId}.workmanager-init"
                android:enabled="false"
                android:exported="false" />

        <!-- Begin FlutterDownloader customization -->
        <!-- disable default Initializer -->
<!--        <provider-->
<!--                android:name="androidx.startup.InitializationProvider"-->
<!--                android:authorities="${applicationId}.androidx-startup"-->
<!--                android:exported="false"-->
<!--                tools:node="merge">-->
<!--            <meta-data-->
<!--                    android:name="androidx.work.WorkManagerInitializer"-->
<!--                    android:value="androidx.startup"-->
<!--                    tools:node="remove" />-->
<!--        </provider>-->

        <!-- declare customized Initializer -->
<!--        <provider-->
<!--                android:name="vn.hunghd.flutterdownloader.FlutterDownloaderInitializer"-->
<!--                android:authorities="${applicationId}.flutter-downloader-init"-->
<!--                android:exported="false">-->
<!--            &lt;!&ndash; changes this number to configure the maximum number of concurrent tasks &ndash;&gt;-->
<!--            <meta-data-->
<!--                    android:name="vn.hunghd.flutterdownloader.MAX_CONCURRENT_TASKS"-->
<!--                    android:value="1" />-->
<!--        </provider>-->
        <!-- End FlutterDownloader customization -->
        <meta-data
                android:name="flutterEmbedding"
                android:value="2" />
    </application>
</manifest>
